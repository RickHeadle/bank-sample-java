// Parsed by ConfigParser.java
// syntax: https://github.com/typesafehub/config#using-hocon-the-json-superset

bank {
  bank-id: "ruby"
}

accounts: {
  hold: [
    {
      name: 'Hold account - USD'
      bic: RUBYUSCA000
      number: 1000USD
      currency: USD
    }

    {
      name: 'Hold account - EUR'
      bic: RUBYUSCA000
      number: 1000EUR
      currency: EUR
    }

    {
      name: 'Hold account - JPY'
      bic: RUBYUSCA000
      number: 1000JPY
      currency: JPY
    }
  ]

  fx: [
    {
      name: 'FX account - USD'
      bic: RUBYUSCA000
      number: 2000USD
      currency: USD
    }

    {
      name: 'FX account - EUR'
      bic: RUBYUSCA000
      number: 2000EUR
      currency: EUR
    }

    {
      name: 'FX account - JPY'
      bic: RUBYUSCA000
      number: 2000JPY
      currency: JPY
    }
  ]

  customers: [
    {
      name: John Doe
      address: {
        house: 703
        street: Market
        city: San Francisco
        post_code: 94103
        state: CA
        country: US
      }
      bic: RUBYUSCA000
      number: 0000001
      currency: USD
      balance: 1000000
    }

    {
      name: Sam Smith
      address: {
        house: Level 39
        street: One Canada Square
        city: London
        post_code: 'E14 5AB'
        country: United Kingdom
      }
      bic: RUBYUSCA000
      number: 0000002
      currency: EUR
      balance: 1000000
    }
  ]
}

// We suppose that two token members ("tokenMember1" and "tokenMember2")
// have authorized linking their respective accounts with Token.
access-tokens: [
  {
    access-token: "R0RUAX0C1T"
    member-id: "tokenMember1"
    accounts: [
      "0000001"
    ]
  },
  {
    access-token: "iHzXBm1U4z"
    member-id: "tokenMember2"
    accounts: [
      "0000002"
    ]
  },
]

// Note: these keys are just sample values and will need to be replaced
account-linking {
  secret-key-store: [
    {
      algorithm: "EDDSA"
      private-key: "4XczbvW4TbmdCiMk31VETPyrHXrEAU5PCKDauSlKKiM"
      // Token will use this public key to verify the signature on the bank authorization payload
      public-key: "0I3gkpgFCEzRSxtPX3_vTd7Ct7bFVGhpB5tC9YuCmNA"
      is-active: true
    }
  ]

  trusted-key-store: [
    {
      algorithm: "RSA_SHA1"
      // Used to encrypt the bank authorization payload
      public-key: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgZHA2uQMt_iKXi3AXYIPxyjVDCydV4JW6zl1I12gEWtMyiWRZx9djgPaHLx-o-hgGm9lKinfrbyV0nC63Wc2O-161eDma-d-RcblcktpTGHAlfsjXU8UlsmMj_ItjH4TN-aWXjs1g-o0-2F3nbYE_UofRDqqlQPED8NSXADrazH0MA8QuuVR3AuBl1NnnKHqlnUw4zvwUAYxfqUTnZPQMTebGP2XsdT5LYOIrswepjdV9BGQf_rmDq_ZmTdaM05qQgWqYG97xPVNbKhpZDahIzVU-TuKC1ez68JVS-NWko5b2bugBp3mdnkVpAI7shmOrDFQZY76Cch1aZBAEjGCSQIDAQAB"
    }
  ]

  encryption {
    encryption-key-id: "ySP4CEppAdS-2jMG"
    encryption-method: "RSA_AES"
  }
}
